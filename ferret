#! /bin/bash

#####################################
# Written by: crimsonmane           #
# github.com/crimsonmane/nightshade #
#         revised 20131225          #
#####################################

initialSetup(){
  notice "Checking if -pastebinit- is installed..." "Updating -inxi- in order to provide consistent output..." "Enter password to continue (because sudo is needed) or CTRL+C to skip" "(-inxi- updates often and so should you)..."
  if ! dpkg -l | grep pastebinit
  then
    sudo aptitude install pastebinit
  fi
  sudo inxi -U
  sudo -k
}

title(){
  printf '%s\n%s - %s\n%s\n' "$title2" "$title1" "$1" "$title2"
}

updateFerret(){
	clear
	echo -e "I'll update ferret now by redownloading from the current source.\nAfter this is complete, restart ferret." #The script should do it instead of directing users to a link.
	cd
	wget https://raw.github.com/cypher-neo/nightshade/master/ferret -O ferret
}

shareLink(){
  text=" Share this URL with your helper! "
  line="--------------------------------------"
  printf '\nData collection in progress - please wait...\n'
  printf '%s\nvv%svv\n%s\n' "$line" "$text" "$line"
  sleep 2
  eval "$1"
  printf '%s\n^^%s^^\n%s\n' "$line" "$text" "$line"
}

sniffSound(){
  inxi -Sc0 > temp.file
  inxi -Axc0 >> temp.file
  case $mintVersion in
    *"Mint 16"*)
      find ~/.config/pulse -name \*source\* -printf '\n\n%c\n%f\n' -execdir cat {} ';' >> temp.file
      ;;
    *)
      find ~/.pulse -name \*source\* -printf '\n\n%c\n%f\n' -execdir cat {} ';' >> temp.file
      ;;
  esac
  shareLink 'cat temp.file | pastebinit'
  rm temp.file
}

XorgLog(){
  shareLink "egrep -wi 'WW|EE' /var/log/Xorg.0.log | pastebinit"
}

syslog(){
  shareLink "{ inxi -c0 -FSRzdfulportcm20; egrep -i 'warn|error|critical' /var/log/syslog; } | pastebinit"
}

medibuntu(){
  if inxi -r | grep -i medibuntu
  then
    notice "Medibuntu found in sources, causing update issues. Confirm removal by entering password (because sudo is needed), or CTRL+C to skip."
    if [ -a /etc/apt/sources.list.d/medibuntu* ]
    then
      sudo rm /etc/apt/sources.list.d/medibuntu*
    fi
      sudo cp /etc/apt/sources.list /etc/apt/sources.list.bkup
      sudo sed -i '/medibuntu/d' /etc/apt/sources.list
      notice "Medibuntu has been removed from sources. Confirm by running Update Manager."
    else
    notice "Medibuntu not found on this system. That's good!"
  fi
  sudo -k
}

ps3ms(){
  #clear
  title "PS3 Media Server"
  select toDo in "Install" "Remove" "Do Nothing"
  do
    case $toDo in
      "Install")
	sudo apt-add-repository ppa:happy-neko/ps3mediaserver
	sudo aptitude update
	sudo aptitude install ps3mediaserver
	break;;
      "Remove")
	sudo aptitude purge -y ps3mediaserver
	sudo apt-add-repository --remove ppa:happy-neko/ps3mediaserver
	break;;
      *)
	break;;
    esac
  done
}

plex(){
  #clear
  title "Plex Media Server"
  select toDo in "Install" "Remove" "Do Nothing"
  do
    case $toDo in
      "Install")
	firefox http://www.plexapp.com/getplex/
	break;;
      "Remove")
	sudo aptitude purge -y plexmediaserver
	break;;
      *)
	break;;
    esac
  done
}

netflixDesktop(){
  #clear
  title "netflix-desktop"
  select toDo in "Install" "Remove" "Remove and Purge PPA" "Do Nothing"
  do
    case $toDo in
      "Install")
	if ! dpkg -l | grep pipelight-multi
	then
	  sudo add-apt-repository ppa:pipelight/stable
	fi
	sudo aptitude update
	sudo aptitude install -y netflix-desktop pipelight-multi
	sudo pipelight-plugin --enable silverlight
	break;;
      "Remove")
	sudo aptitude purge -y netflix-desktop pipelight-multi
	break;;
      "Remove and Purge PPA")
	sudo aptitude purge -y netflix-desktop
	sudo aptitude purge -y pipelight-multi
	sudo add-apt-repository --remove ppa:pipelight/stable
	break;;
      *)
	break;;
    esac
  done
}

handbrake(){
  #clear
  title "Handbrake"
  select toDo in "Install" "Remove" "Do Nothing"
  do
    case $toDo in
      "Install")
	sudo add-apt-repository ppa:stebbins/handbrake-releases
	sudo aptitude update
	sudo aptitude install -y handbrake-gtk handbrake-cli
	break;;
      "Remove")
	sudo aptitude purge -y handbrake-gtk handbrake-cli
	sudo apt-add-repository --remove ppa:stebbins/handbrake-releases
	break;;
      *)
	break;;
    esac
  done
}

chrome(){
  #clear
  title "Google Chrome"
  select toDo in "Install" "Remove" "Do Nothing"
  do
    case $toDo in
      "Install")
	wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
	sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/ferret-chrome.list'
	sudo aptitude update
	sudo aptitude install -y google-chrome-stable
	break;;
      "Remove")
	sudo aptitude purge -y google-chrome-stable
	sudo rm /etc/apt/sources.list.d/ferret-chrome.list
	break;;
      *)
	break;;
    esac
  done
}

bootRepair(){
  #clear
  title "Boot Repair"
  select toDo in "Install & Launch" "Remove" "Do Nothing"
  do
    case $toDo in
      "Install & Launch")
	if ! dpkg -l | grep boot-repair
	then
	  sudo apt-add-repository ppa:yannubuntu/boot-repair
	  sudo aptitude update
	  sudo aptitude install -y boot-repair
	fi
	boot-repair &
	break;;
      "Remove")
	sudo aptitude purge -y boot-repair
	sudo apt-add-repository --remove ppa:yannubuntu/boot-repair
	break;;
      *)
	break;;
    esac
  done
}

video(){
  notice "Section not yet written."
}

audio(){
  #clear
  title "Troubleshoot Audio"
  select toDo in "Do Nothing" "The only audio device shown is Dummy Output"
  do
    case $toDo in
      "The only audio device shown is Dummy Output")
	sudo aptitude purge --safe-resolver alsa-base pulseaudio
	sudo aptitude install -y alsa-base pulseaudio
	sudo alsa force-reload
	notice "Changes will take effect when you reboot. Please reboot."
	break;;
      "Same as #2 but that fix didn't work.")
	notice "Section not written."
	break;;
      *)
	break;;
    esac
  done
}

wifi(){
  case $(inxi -Nxx) in
    *"BCM43"*)
      sudo aptitude install firmware-b43-installer b43-fwcutter
      ;;
    *)
      notice "No wifi issues detected."
      ;;
  esac
}

propDrivers(){
  case $mintVersion in
    *"KDE"*"Mint 13"*) jockey-kde;;
    *"KDE"*"Mint 14"*) software-properties-kde;;
    *"KDE"*"Mint 15"*) software-properties-kde;;
    *"Mint 13"*) jockey-gtk;;
    *"Mint 14"*) software-properties-gtk;;
    *"Mint 15"*) software-properties-gtk;;
    *"Mint 16"*) driver-manager;;
  esac
}

packageSearch(){
  notice "If you did not allow the routine updates when Ferret started, then these results are not going to be ideal. If that is the case, simply run Ferret again and allow updates."
  read -r -p "Type the package name you'd like to search: " pkg
  shareLink '{ echo "------installed------"; aptitude search -F "%p %V %v" "$pkg" | grep -iv none; echo "++++not installed++++"; aptitude search -F "%p %V %v" "$pkg" | grep -i none; } | pastebinit'
}

popularSoftware(){
  #clear
  title "Software Menu"
  select toDo in "Do Nothing" "Plex Media Server" "PS3 Media Server" "Netflix-Desktop/Pipelight" "Google Chrome" "Handbrake"
  do
    case $toDo in
      "Do Nothing") toDo=-1; break;;
      "Plex Media Server") plex; break;;
      "PS3 Media Server") ps3ms; break;;
      "Netflix-Desktop/Pipelight") netflixDesktop; break;;
      "Google Chrome") chrome; break;;
      "Handbrake") handbrake; break;;
    esac
  done
}

main(){
#  toDo=0
#  while [ $toDo -ne -1 ]
#  do
    #clear
    title "Main Menu"
    select toDo in "Do Nothing" "Update Ferret" "Popular Software" "Troubleshoot Audio" "Troubleshoot Video" "Troubleshoot WiFi" "sniff sound" "sniff Xorg log" "sniff syslog" "Package Search" "Launch Drivers Dialogue" "Boot Repair"
    do
      case $toDo in
	"Do Nothing") toDo=-1; break;;
	"Update Ferret") updateFerret; break;;
	"Popular Software") popularSoftware; break;;
	"Troubleshoot Audio") audio; break;;
	"Troubleshoot Video") video; break;;
	"Troubleshoot WiFi") wifi; break;;
	"sniff sound") sniffSound; break;;
	"sniff Xorg log") XorgLog; break;;
	"sniff syslog") syslog; break;;
	"Package Search") packageSearch; break;;
	"Launch Drivers Dialogue") propDrivers; break;;
	"Boot Repair") bootRepair; break;;
      esac
    done
#  done
  notice "Please 'like' my company page: https://facebook.com/nightshadePC"
  notice "Report flaws: https://github.com/crimsonmane/nightshade/issues"
  printf 'Thank you for using %s\n' "$title1!"
}

notice(){
  tput setaf 1 #Red text
  printf '%s\n' "$@"
  tput sgr0 #Reset text
}

initialSetup
medibuntu
wifi
title1="Ferret (version 5)"
title2="------------------"
mintVersion=$(inxi -S)
main
sudo -k
